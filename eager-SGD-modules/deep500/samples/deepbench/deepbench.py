from collections import namedtuple

# Vector saves w, h, c_in, n, c_out (k), filter_w(s), filter_h(r), pad_w, pad_h, wstride, hstride
ConvBench = namedtuple('ConvBench', ['w','h','c','n','k','s','r','pad_w','pad_h','wstride','hstride'])
# Vector saves m, n, k, a_t, b_t
GemmBench = namedtuple('GemmBench', ['m','n','k','a_trans','b_trans'])

# Ported to Python from https://github.com/baidu-research/DeepBench/blob/master/code/kernels/conv_problems.h
conv_training_set = [
    ConvBench(700, 161, 1, 4, 32, 20, 5, 0, 0, 2, 2),
    ConvBench(700, 161, 1, 8, 32, 20, 5, 0, 0, 2, 2),
    ConvBench(700, 161, 1, 16, 32, 20, 5, 0, 0, 2, 2),
    ConvBench(700, 161, 1, 32, 32, 20, 5, 0, 0, 2, 2),
    ConvBench(341, 79, 32, 4, 32, 10, 5, 0, 0, 2, 2),
    ConvBench(341, 79, 32, 8, 32, 10, 5, 0, 0, 2, 2),
    ConvBench(341, 79, 32, 16, 32, 10, 5, 0, 0, 2, 2),
    ConvBench(341, 79, 32, 32, 32, 10, 5, 0, 0, 2, 2),
    ConvBench(480, 48, 1, 16, 16, 3, 3, 1, 1, 1, 1),
    ConvBench(240, 24, 16, 16, 32, 3, 3, 1, 1, 1, 1),
    ConvBench(120, 12, 32, 16, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(60, 6, 64, 16, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(108, 108, 3, 8, 64, 3, 3, 1, 1, 2, 2),
    ConvBench(54, 54, 64, 8, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(27, 27, 128, 8, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(14, 14, 128, 8, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(7, 7, 256, 8, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(224, 224, 3, 8, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(112, 112, 64, 8, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(56, 56, 128, 8, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(28, 28, 256, 8, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(14, 14, 512, 8, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(7, 7, 512, 8, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(224, 224, 3, 16, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(112, 112, 64, 16, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(56, 56, 128, 16, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(28, 28, 256, 16, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(14, 14, 512, 16, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(7, 7, 512, 16, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(224, 224, 3, 16, 64, 7, 7, 3, 3, 2, 2),
    ConvBench(28, 28, 192, 16, 32, 5, 5, 2, 2, 1, 1),
    ConvBench(28, 28, 192, 16, 64, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 512, 16, 48, 5, 5, 2, 2, 1, 1),
    ConvBench(14, 14, 512, 16, 192, 1, 1, 0, 0, 1, 1),
    ConvBench(7, 7, 832, 16, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(7, 7, 832, 16, 128, 5, 5, 2, 2, 1, 1),
    ConvBench(56, 56, 64, 8, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(56, 56, 64, 8, 256, 1, 1, 0, 0, 2, 2),
    ConvBench(28, 28, 128, 8, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(28, 28, 128, 8, 512, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 256, 8, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 256, 8, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(14, 14, 256, 8, 1024, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 512, 8, 512, 1, 1, 0, 0, 1, 1),
    ConvBench(7, 7, 2048, 8, 512, 1, 1, 3, 3, 2, 2),
    ConvBench(56, 56, 64, 16, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(56, 56, 64, 16, 256, 1, 1, 0, 0, 2, 2),
    ConvBench(28, 28, 128, 16, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(28, 28, 128, 16, 512, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 256, 16, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 256, 16, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(14, 14, 256, 16, 1024, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 512, 16, 512, 1, 1, 0, 0, 1, 1),
    ConvBench(7, 7, 2048, 16, 512, 1, 1, 3, 3, 2, 2),
    ConvBench(700, 161, 1, 16, 64, 5, 5, 1, 1, 2, 2),
    ConvBench(350, 80, 64, 16, 64, 3, 3, 1, 1, 1, 1),
    ConvBench(350, 80, 64, 16, 128, 5, 5, 1, 1, 2, 2),
    ConvBench(175, 40, 128, 16, 128, 3, 3, 1, 1, 1, 1),
    ConvBench(175, 40, 128, 16, 256, 5, 5, 1, 1, 2, 2),
    ConvBench(84, 20, 256, 16, 256, 3, 3, 1, 1, 1, 1),
    ConvBench(84, 20, 256, 16, 512, 5, 5, 1, 1, 2, 2),
    ConvBench(42, 10, 512, 16, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(112, 112, 64, 8, 64, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 64, 8, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 256, 8, 64, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 256, 8, 128, 1, 1, 0, 0, 2, 2),
    ConvBench(28, 28, 128, 8, 512, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 8, 128, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 8, 256, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 256, 8, 1024, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 8, 1024, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 1024, 8, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 256, 8, 1024, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 1024, 8, 512, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 512, 8, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(7, 7, 512, 8, 2048, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 1024, 8, 2048, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 2048, 8, 512, 1, 1, 0, 0, 1, 1),
    ConvBench(112, 112, 64, 16, 64, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 64, 16, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 256, 16, 64, 1, 1, 0, 0, 1, 1),
    ConvBench(56, 56, 256, 16, 128, 1, 1, 0, 0, 2, 2),
    ConvBench(28, 28, 128, 16, 512, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 16, 128, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 16, 256, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 256, 16, 1024, 1, 1, 0, 0, 1, 1),
    ConvBench(28, 28, 512, 16, 1024, 1, 1, 0, 0, 2, 2),
    ConvBench(14, 14, 1024, 16, 256, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 256, 16, 1024, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 1024, 16, 512, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 512, 16, 512, 3, 3, 1, 1, 1, 1),
    ConvBench(7, 7, 512, 16, 2048, 1, 1, 0, 0, 1, 1),
    ConvBench(14, 14, 1024, 16, 2048, 1, 1, 0, 0, 2, 2),
    ConvBench(7, 7, 2048, 16, 512, 1, 1, 0, 0, 1, 1)
]

# Ported to Python from https://github.com/baidu-research/DeepBench/blob/master/code/kernels/gemm_problems.h
gemm_training_set = [
    GemmBench(1760, 16, 1760, False, False),
    GemmBench(1760, 32, 1760, False, False),
    GemmBench(1760, 64, 1760, False, False),
    GemmBench(1760, 128, 1760, False, False),
    GemmBench(1760, 7000, 1760, False, False),
    GemmBench(2048, 16, 2048, False, False),
    GemmBench(2048, 32, 2048, False, False),
    GemmBench(2048, 64, 2048, False, False),
    GemmBench(2048, 128, 2048, False, False),
    GemmBench(2048, 7000, 2048, False, False),
    GemmBench(2560, 16, 2560, False, False),
    GemmBench(2560, 32, 2560, False, False),
    GemmBench(2560, 64, 2560, False, False),
    GemmBench(2560, 128, 2560, False, False),
    GemmBench(2560, 7000, 2560, False, False),
    GemmBench(4096, 16, 4096, False, False),
    GemmBench(4096, 32, 4096, False, False),
    GemmBench(4096, 64, 4096, False, False),
    GemmBench(4096, 128, 4096, False, False),
    GemmBench(4096, 7000, 4096, False, False),
    GemmBench(1760, 16, 1760, True, False),
    GemmBench(1760, 32, 1760, True, False),
    GemmBench(1760, 64, 1760, True, False),
    GemmBench(1760, 128, 1760, True, False),
    GemmBench(1760, 7000, 1760, True, False),
    GemmBench(2048, 16, 2048, True, False),
    GemmBench(2048, 32, 2048, True, False),
    GemmBench(2048, 64, 2048, True, False),
    GemmBench(2048, 128, 2048, True, False),
    GemmBench(2048, 7000, 2048, True, False),
    GemmBench(2560, 16, 2560, True, False),
    GemmBench(2560, 32, 2560, True, False),
    GemmBench(2560, 64, 2560, True, False),
    GemmBench(2560, 128, 2560, True, False),
    GemmBench(2560, 7000, 2560, True, False),
    GemmBench(4096, 16, 4096, True, False),
    GemmBench(4096, 32, 4096, True, False),
    GemmBench(4096, 64, 4096, True, False),
    GemmBench(4096, 128, 4096, True, False),
    GemmBench(4096, 7000, 4096, True, False),
    GemmBench(1760, 7133, 1760, False, True),
    GemmBench(2048, 7133, 2048, False, True),
    GemmBench(2560, 7133, 2560, False, True),
    GemmBench(4096, 7133, 4096, False, True),
    GemmBench(5124, 9124, 1760, False, False),
    GemmBench(35, 8457, 1760, False, False),
    GemmBench(5124, 9124, 2048, False, False),
    GemmBench(35, 8457, 2048, False, False),
    GemmBench(5124, 9124, 2560, False, False),
    GemmBench(35, 8457, 2560, False, False),
    GemmBench(5124, 9124, 4096, False, False),
    GemmBench(35, 8457, 4096, False, False),
    GemmBench(5124, 9124, 1760, True, False),
    GemmBench(35, 8457, 1760, True, False),
    GemmBench(5124, 9124, 2048, True, False),
    GemmBench(35, 8457, 2048, True, False),
    GemmBench(5124, 9124, 2560, True, False),
    GemmBench(35, 8457, 2560, True, False),
    GemmBench(5124, 9124, 4096, True, False),
    GemmBench(35, 8457, 4096, True, False),
    GemmBench(7680, 16, 2560, False, False),
    GemmBench(7680, 32, 2560, False, False),
    GemmBench(7680, 64, 2560, False, False),
    GemmBench(7680, 128, 2560, False, False),
    GemmBench(7680, 16, 2560, True, False),
    GemmBench(7680, 32, 2560, True, False),
    GemmBench(7680, 64, 2560, True, False),
    GemmBench(7680, 128, 2560, True, False),
    GemmBench(3072, 16, 1024, False, False),
    GemmBench(3072, 32, 1024, False, False),
    GemmBench(3072, 64, 1024, False, False),
    GemmBench(3072, 128, 1024, False, False),
    GemmBench(3072, 16, 1024, True, False),
    GemmBench(3072, 32, 1024, True, False),
    GemmBench(3072, 64, 1024, True, False),
    GemmBench(3072, 128, 1024, True, False),
    GemmBench(3072, 7435, 1024, False, True),
    GemmBench(7680, 5481, 2560, False, True),
    GemmBench(512, 8, 500000, False, False),
    GemmBench(1024, 8, 500000, False, False),
    GemmBench(512, 16, 500000, False, False),
    GemmBench(1024, 16, 500000, False, False),
    GemmBench(512, 8, 500000, True, False),
    GemmBench(1024, 8, 500000, True, False),
    GemmBench(512, 16, 500000, True, False),
    GemmBench(1024, 16, 500000, True, False),
    GemmBench(1024, 700, 512, False, False),
    GemmBench(1024, 700, 512, True, False),
    GemmBench(7680, 24000, 2560, False, False),
    GemmBench(6144, 24000, 2048, False, False),
    GemmBench(4608, 24000, 1536, False, False),
    GemmBench(8448, 24000, 2816, False, False),
    GemmBench(3072, 24000, 1024, False, False),
    GemmBench(7680, 48000, 2560, False, False),
    GemmBench(6144, 48000, 2048, False, False),
    GemmBench(4608, 48000, 1536, False, False),
    GemmBench(8448, 48000, 2816, False, False),
    GemmBench(3072, 48000, 1024, False, False),
    GemmBench(7680, 24000, 2560, True, False),
    GemmBench(6144, 24000, 2048, True, False),
    GemmBench(4608, 24000, 1536, True, False),
    GemmBench(8448, 24000, 2816, True, False),
    GemmBench(3072, 24000, 1024, True, False),
    GemmBench(7680, 48000, 2560, True, False),
    GemmBench(6144, 48000, 2048, True, False),
    GemmBench(4608, 48000, 1536, True, False),
    GemmBench(8448, 48000, 2816, True, False),
    GemmBench(3072, 48000, 1024, True, False),
    GemmBench(6144, 16, 2048, False, False),
    GemmBench(4608, 16, 1536, False, False),
    GemmBench(8448, 16, 2816, False, False),
    GemmBench(6144, 32, 2048, False, False),
    GemmBench(4608, 32, 1536, False, False),
    GemmBench(8448, 32, 2816, False, False),
    GemmBench(6144, 16, 2048, True, False),
    GemmBench(4608, 16, 1536, True, False),
    GemmBench(8448, 16, 2816, True, False),
    GemmBench(6144, 32, 2048, True, False),
    GemmBench(4608, 32, 1536, True, False),
    GemmBench(8448, 32, 2816, True, False),
    GemmBench(512, 24000, 2816, False, False),
    GemmBench(512, 24000, 2048, False, False),
    GemmBench(512, 24000, 2560, False, False),
    GemmBench(512, 24000, 1536, False, False),
    GemmBench(1024, 24000, 2816, False, False),
    GemmBench(1024, 24000, 2048, False, False),
    GemmBench(1024, 24000, 2560, False, False),
    GemmBench(1024, 24000, 1536, False, False),
    GemmBench(512, 16, 512, False, False),
    GemmBench(1024, 16, 512, False, False),
    GemmBench(512, 24000, 2816, True, False),
    GemmBench(512, 24000, 2048, True, False),
    GemmBench(512, 24000, 2560, True, False),
    GemmBench(512, 24000, 1536, True, False),
    GemmBench(1024, 24000, 2816, True, False),
    GemmBench(1024, 24000, 2048, True, False),
    GemmBench(1024, 24000, 2560, True, False),
    GemmBench(1024, 24000, 1536, True, False),
    GemmBench(512, 16, 512, False, True),
    GemmBench(1024, 16, 512, False, True),
    GemmBench(512, 48000, 2816, False, False),
    GemmBench(512, 48000, 2048, False, False),
    GemmBench(512, 48000, 2560, False, False),
    GemmBench(512, 48000, 1536, False, False),
    GemmBench(1024, 48000, 2816, False, False),
    GemmBench(1024, 48000, 2048, False, False),
    GemmBench(1024, 48000, 2560, False, False),
    GemmBench(1024, 48000, 1536, False, False),
    GemmBench(512, 32, 512, False, False),
    GemmBench(1024, 32, 512, False, False),
    GemmBench(512, 48000, 2816, True, False),
    GemmBench(512, 48000, 2048, True, False),
    GemmBench(512, 48000, 2560, True, False),
    GemmBench(512, 48000, 1536, True, False),
    GemmBench(1024, 48000, 2816, True, False),
    GemmBench(1024, 48000, 2048, True, False),
    GemmBench(1024, 48000, 2560, True, False),
    GemmBench(1024, 48000, 1536, True, False),
    GemmBench(512, 32, 512, False, True),
    GemmBench(1024, 32, 512, False, True)
]
